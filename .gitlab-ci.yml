stages:
  - lint
  - build
  - doc
  - doc-move
  - deploy

variables:
  RENV_PATHS_CACHE: "~/.renv/cache"
  RENV_PATHS_LIBRARY_ROOT: "~/.renv/library"
  RENV_PATHS_LIBRARY_ROOT_ASIS: "true"

cache:
  key: ${CI_JOB_NAME}
  paths:
    - ${RENV_PATHS_CACHE}
    - ${RENV_PATHS_LIBRARY}

linting:
  stage: lint
  script:
    - >
      if [ ! -d "$RENV_PATHS_CACHE" ]; then
        mkdir -p $RENV_PATHS_CACHE;
        echo "Installing RENV_PATHS_CACHE in ${RENV_PATHS_CACHE}...";
      fi
    - Rscript -e "if (!requireNamespace('renv', quietly = TRUE)) install.packages('renv');"
    - Rscript -e "renv::restore();"
    - Rscript -e 'devtools::load_all(); shinyValidator::lint_code();'

building:
  stage: build
  script:
    - Rscript -e 'devtools::check(vignettes = FALSE, cran = FALSE, error_on = "error", check_dir = "check")'
  artifacts:
    paths:
      - check
    expire_in: 30 days

documentation:
  stage: doc
  script:
    - Rscript -e 'pkgdown::build_site()'
  artifacts:
    paths:
      - docs
    expire_in: 30 days

documentation-move:
  stage: doc-move
  dependencies:
    - documentation
  only:
    - master
    - main
    - feat-improve-doc
    - feat-shinytest2
  script:
    - mkdir -p public
    - 'curl --location --output artifacts.zip --header "JOB-TOKEN: $CI_JOB_TOKEN" "$CI_API_V4_URL/projects/$CI_PROJECT_ID/jobs/artifacts/production/download?job=pages" &&
      unzip artifacts.zip &&
      rm artifacts.zip &&
      echo "copied production artifacts" ||
      echo "copied production artifacts failed"'
    - cp -r docs/* public
  artifacts:
    paths:
      - public
    expire_in: 30 days

pages:
  stage: deploy
  script:
    - echo "deployment with cache"
  artifacts:
    paths:
      - public
  only:
    - master
    - main
    - feat-improve-doc
    - feat-shinytest2
